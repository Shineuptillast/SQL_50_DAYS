Given a table of Facebook posts, for each user who posted at least twice in 2021, write a query to find the number of days between each userâ€™s first post of the year and last post of the year in the year 2021. Output the user and number of the days between each user's first and last post.

p.s. If you've read the Ace the Data Science Interview and liked it, consider writing us a review?

posts Table:
Column Name	Type
user_id	integer
post_id	integer
post_date	timestamp
post_content	text
posts Example Input:
user_id	post_id	post_date	post_content
151652	599415	07/10/2021 12:00:00	Need a hug
661093	624356	07/29/2021 13:00:00	Bed. Class 8-12. Work 12-3. Gym 3-5 or 6. Then class 6-10. Another day that's gonna fly by. I miss my girlfriend
004239	784254	07/04/2021 11:00:00	Happy 4th of July!
661093	442560	07/08/2021 14:00:00	Just going to cry myself to sleep after watching Marley and Me.
151652	111766	07/12/2021 19:00:00	I'm so done with covid - need travelling ASAP!
Example Output:
user_id	days_between
151652	2
661093	21
The dataset you are querying against may have different input & output - this is just an example!
SOLUTION-->

1)WITH TWICE AS (SELECT * FROM POSTS WHERE USER_ID IN (SELECT USER_ID FROM POSTS WHERE DATE_PART('YEAR',POST_DATE)='2021' GROUP BY USER_ID HAVING COUNT(POST_ID) >=2) ),
CTE_FIRST_DATE AS(SELECT *, ROW_NUMBER() OVER(PARTITION BY USER_ID ORDER BY POST_DATE ASC) AS FIRST_DATE_POST FROM TWICE ), CTE_LAST_DATE AS (SELECT * ,ROW_NUMBER() OVER(PARTITION BY USER_ID ORDER BY POST_DATE DESC) AS LAST_DATE_POSTING
FROM TWICE )
SELECT CTE_F.USER_ID,DATE_part('day',CTE_L.POST_DATE-CTE_F.POST_DATE) FROM CTE_FIRST_DATE CTE_F JOIN CTE_LAST_DATE CTE_L ON CTE_F.USER_ID=CTE_L.USER_ID AND (FIRST_DATE_POST=1 AND LAST_DATE_POSTING=1) ORDER BY CTE_F.USER_ID;
